<?xml version="1.0" encoding="UTF-8"?>
<project name="Build All" default="dist" basedir="..">

	<property name="debug" value="true" />
	<property name="debuglevel" value="lines,vars,source" />
	<property name="optimize" value="true" />
	<property name="nowarn" value="true" />
	<property name="compiler" value="javac1.8" />
	<property name="src.gameserver" location="../gameserver/src/main" />
	<property name="src.authserver" location="../authserver/src/main" />
	<property name="src.commons" location="../commons/src/main" />
	<property name="src.scripts" location="../dist/gameserver/data/scripts" />
	<property name="stringer.home"  location="../stringer/"/>
	<taskdef name="stringer" classname="com.licel.stringer.AntTask" classpath="/stringer/stringer.jar"/>

	<property name="lib" location="../lib" />

	<property name="build" location="../build" />
	<property name="build_archive" location="../build_archive" />
	<property name="build.classes" location="${build}/classes" />

	<property name="build.version" value="Interlude" />
	<property name="build.team" value="" />
	<property name="build.teamsite" value="" />
	<property name="build.licensetype" value="" />
	<property name="build.coredev" value="" />
	<property name="build.datadev" value="" />

	<path id="classpath">
		<fileset dir="/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<pathconvert property="jar.list" pathsep=" " refid="classpath">
		<mapper type="flatten" />
	</pathconvert>

	<property name="build.classpath" refid="classpath"/>

	<tstamp>
		<format property="build.tstamp" pattern="yyyy.MM.dd HH:mm" />
	</tstamp>

	<target name="clean" description="Remove the output directories.">
		<delete dir="/build" />
	</target>

	<target name="init" depends="checkRequirements" description="Create the output directories.">
		<mkdir dir="/build" />
		<mkdir dir="${build.classes}" />
	</target>

	<!--компилим commons-->
	<target name="commons" depends="init">

		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />

		<javac srcdir="${src.commons}"
		destdir="${build.classes}"
		debuglevel="${debuglevel}"
		compiler="${compiler}"
		debug="${debug}"
		source="1.8"
		target="1.8"
		includeantruntime="false"
		encoding="UTF-8"
		nowarn="${nowarn}"
		classpath="${build.classpath}">
			<compilerarg value="-Xlint:all" />
		</javac>
	</target>

	<!--собираем commons в jar-->
	<target name="commons-jar" depends="commons">
		<exec executable="git" outputproperty="build.revision">
			<arg value="rev-list"/>
			<arg value="--all"/>
			<arg value="--count"/>
			<arg value="HEAD"/>
			<redirector>
				<outputfilterchain>
					<tokenfilter>
						<replaceregex pattern="^[^-]+-" replace=""/>
						<replaceregex pattern="-.+$" replace=""/>
					</tokenfilter>
				</outputfilterchain>
			</redirector>
		</exec>
		<echo>Current Revision ${build.revision}</echo>

		<jar destfile="${build}/commons.jar" level="9">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Revision" value="${build.revision}" />
				<attribute name="Chronicle" value="${build.version}" />
				<attribute name="Team-Name" value="${build.team}" />
				<attribute name="Team-Site" value="${build.teamsite}" />
				<attribute name="License-Type" value="${build.licensetype}" />
				<attribute name="Core-Dev" value="${build.coredev}" />
				<attribute name="Data-Dev" value="${build.datadev}" />
			</manifest>
		</jar>
		<!-- Protect by Stringer -->
		<stringer srcFile="${build}/commons.jar"
                  destFile="${build}/commons.jar"
        >
			<verbose>false</verbose>
			<optimize>false</optimize>
			<protectionElements>
				<protectionElement>
					<stringEncryption>
						<mode>off</mode>
					</stringEncryption>
					<resourceEncryption>
						<mode>off</mode>
					</resourceEncryption>
					<hideAccess>
						<mode>off</mode>
					</hideAccess>
					<integrityControl>
						<mode>off</mode>
					</integrityControl>
				</protectionElement>
			</protectionElements>
		</stringer>

	</target>

	<!--компилим scripts-->
	<target name="scripts" depends="commons-jar">
		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}"/>

		<javac srcdir="${src.scripts}"
		destdir="${build.classes}"
		debuglevel="${debuglevel}"
		compiler="${compiler}"
		debug="${debug}"
		source="1.8"
		target="1.8"
		includeantruntime="false"
		encoding="UTF-8"
		nowarn="${nowarn}"
		classpath="${build.classpath}:${build}/commons.jar:${build}/gameserver.jar">
			<compilerarg value="-Xlint:all" />
		</javac>
	</target>

	<!--собираем scripts в jar-->
	<target name="scripts-jar" depends="scripts">
		<exec executable="git" outputproperty="build.revision">
			<arg value="rev-list"/>
			<arg value="--all"/>
			<arg value="--count"/>
			<arg value="HEAD"/>
			<redirector>
				<outputfilterchain>
					<tokenfilter>
						<replaceregex pattern="^[^-]+-" replace=""/>
						<replaceregex pattern="-.+$" replace=""/>
					</tokenfilter>
				</outputfilterchain>
			</redirector>
		</exec>

		<jar destfile="${build}/scripts.jar" level="9">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Revision" value="${build.revision}" />
				<attribute name="Chronicle" value="${build.version}" />
				<attribute name="Team-Name" value="${build.team}" />
				<attribute name="Team-Site" value="${build.teamsite}" />
				<attribute name="License-Type" value="${build.licensetype}" />
				<attribute name="Core-Dev" value="${build.coredev}" />
				<attribute name="Data-Dev" value="${build.datadev}" />
			</manifest>
		</jar>
		<!-- Protect by Stringer -->
		<stringer srcFile="${build}/scripts.jar"
                  destFile="${build}/scripts.jar"
        >
			<verbose>false</verbose>
			<optimize>false</optimize>
			<protectionElements>
				<protectionElement>
					<stringEncryption>
						<mode>off</mode>
					</stringEncryption>
					<resourceEncryption>
						<mode>off</mode>
					</resourceEncryption>
					<hideAccess>
						<mode>off</mode>
					</hideAccess>
					<integrityControl>
						<mode>off</mode>
					</integrityControl>
				</protectionElement>
			</protectionElements>
		</stringer>

	</target>

	<!--компилим gameserver-->
	<target name="gameserver" depends="commons-jar">

		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />

		<javac srcdir="${src.gameserver}"
		destdir="${build.classes}"
		debuglevel="${debuglevel}"
		compiler="${compiler}"
		optimize="${optimize}"
		debug="${debug}"
		source="1.8"
		target="1.8"
		includeantruntime="false"
		encoding="UTF-8"
		nowarn="${nowarn}"
		classpath="${build.classpath}:${build}/commons.jar">
			<compilerarg value="-Xlint:all" />
		</javac>
	</target>

	<!--собираем gameserver в jar-->
	<target name="gameserver-jar" depends="gameserver">
		<exec executable="git" outputproperty="build.revision">
			<arg value="rev-list"/>
			<arg value="--all"/>
			<arg value="--count"/>
			<arg value="HEAD"/>
			<redirector>
				<outputfilterchain>
					<tokenfilter>
						<replaceregex pattern="^[^-]+-" replace=""/>
						<replaceregex pattern="-.+$" replace=""/>
					</tokenfilter>
				</outputfilterchain>
			</redirector>
		</exec>
		<echo>Current Revision ${build.revision}</echo>

		<concat destfile="${build}/classes/ru//gameserver/version.ini">
			Build-By=${user.name}
			Version=${build.version}
			Revision=${build.revision}
			Build Date=${build.tstamp}
			OS=${os.name} ${os.version} ${os.arch}
			JDK=${ant.java.version} ${java.vendor}
		</concat>
		<jar destfile="${build}/gameserver.jar" level="9">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Main-Class" value="ru.l2.gameserver.GameServer" />
				<attribute name="Class-Path" value="${jar.list} commons.jar" />
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Build-Os" value="${os.name}" />
				<attribute name="Revision" value="${build.revision}" />
				<attribute name="Chronicle" value="${build.version}" />
				<attribute name="Team-Name" value="${build.team}" />
				<attribute name="Team-Site" value="${build.teamsite}" />
				<attribute name="License-Type" value="${build.licensetype}" />
				<attribute name="Core-Dev" value="${build.coredev}" />
				<attribute name="Data-Dev" value="${build.datadev}" />
			</manifest>
		</jar>
		<!-- Protect by Stringer -->
		<stringer srcFile="${build}/gameserver.jar"
                  destFile="${build}/gameserver.jar"
        >
			<verbose>false</verbose>
			<optimize>false</optimize>
			<protectionElements>
				<protectionElement>
					<stringEncryption>
						<mode>annotations</mode>
					</stringEncryption>
					<resourceEncryption>
						<mode>off</mode>
					</resourceEncryption>
					<hideAccess>
						<mode>annotations</mode>
					</hideAccess>
					<integrityControl>
						<mode>off</mode>
					</integrityControl>
				</protectionElement>
			</protectionElements>
		</stringer>

	</target>

	<!--компилим authserver-->
	<target name="authserver" depends="commons-jar">


		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />

		<javac srcdir="${src.authserver}"
		optimize="${optimize}"
		debuglevel="${debuglevel}"
		compiler="${compiler}"
		destdir="${build.classes}"
		debug="${debug}"
		source="1.8"
		target="1.8"
		includeantruntime="false"
		encoding="UTF-8"
		nowarn="${nowarn}"
		classpath="${build.classpath}:${build}/commons.jar">
			<compilerarg value="-Xlint:all" />
		</javac>
	</target>

	<!--собираем authserver в jar-->
	<target name="authserver-jar" depends="authserver">
		<exec executable="git" outputproperty="build.revision">
			<arg value="rev-list"/>
			<arg value="--all"/>
			<arg value="--count"/>
			<arg value="HEAD"/>
			<redirector>
				<outputfilterchain>
					<tokenfilter>
						<replaceregex pattern="^[^-]+-" replace=""/>
						<replaceregex pattern="-.+$" replace=""/>
					</tokenfilter>
				</outputfilterchain>
			</redirector>
		</exec>

		<jar destfile="${build}/authserver.jar" level="9">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Main-Class" value="ru.l2.authserver.AuthServer" />
				<attribute name="Class-Path" value="${jar.list} commons.jar" />
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Revision" value="${build.revision}" />
				<attribute name="Chronicle" value="${build.version}" />
				<attribute name="Team-Name" value="${build.team}" />
				<attribute name="Team-Site" value="${build.teamsite}" />
				<attribute name="License-Type" value="${build.licensetype}" />
				<attribute name="Core-Dev" value="${build.coredev}" />
				<attribute name="Data-Dev" value="${build.datadev}" />
			</manifest>
		</jar>
		<!-- Protect by Stringer -->
		<stringer srcFile="${build}/authserver.jar"
                  destFile="${build}/authserver.jar"
        >
			<verbose>false</verbose>
			<optimize>false</optimize>
			<protectionElements>
				<protectionElement>
					<stringEncryption>
						<mode>off</mode>
					</stringEncryption>
					<resourceEncryption>
						<mode>off</mode>
					</resourceEncryption>
					<hideAccess>
						<mode>off</mode>
					</hideAccess>
					<integrityControl>
						<mode>off</mode>
					</integrityControl>
				</protectionElement>
			</protectionElements>
		</stringer>

	</target>

	<target name="checkRequirements" description="Check Requirements.">
		<echo message="Check ANT version" />
		<fail message="Ant 1.9.4 is required. But your version is ${ant.version} and if you are using Eclipse probably is outdated.">
			<condition>
				<not>
					<antversion atleast="1.9.4" />
				</not>
			</condition>
		</fail>
		<echo message="Check JDK version" />
		<available classname="java.util.stream.Stream" property="JDK8.present" />
		<fail unless="JDK8.present" message="Java 1.8 is required. But your version is Java ${ant.java.version} and probably JDK is not installed." />
	</target>

	<target name="dist" depends="authserver-jar, gameserver-jar, scripts-jar">
		<delete dir="${build.classes}" />
	</target>
</project>